// <auto-generated />
using KisVuzDotNetCore2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace KisVuzDotNetCore2.Migrations
{
    [DbContext(typeof(AppIdentityDBContext))]
    [Migration("20200523115446_LmsEvents2")]
    partial class LmsEvents2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.Abiturient", b =>
                {
                    b.Property<int>("AbiturientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AbiturientStatusId");

                    b.Property<string>("AppUserId");

                    b.Property<bool>("IsHostelRequired");

                    b.HasKey("AbiturientId");

                    b.HasIndex("AbiturientStatusId");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Abiturients");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientIndividualAchievment", b =>
                {
                    b.Property<int>("AbiturientIndividualAchievmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AbiturientId");

                    b.Property<int>("AbiturientIndividualAchievmentTypeId");

                    b.Property<int?>("FileModelId");

                    b.Property<string>("Remark");

                    b.Property<int>("RowStatusId");

                    b.HasKey("AbiturientIndividualAchievmentId");

                    b.HasIndex("AbiturientId");

                    b.HasIndex("AbiturientIndividualAchievmentTypeId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("AbiturientIndividualAchievments");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientIndividualAchievmentType", b =>
                {
                    b.Property<int>("AbiturientIndividualAchievmentTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AbiturientIndividualAchievmentTypeName");

                    b.Property<int>("Point");

                    b.HasKey("AbiturientIndividualAchievmentTypeId");

                    b.ToTable("AbiturientIndividualAchievmentTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientLmsEvent", b =>
                {
                    b.Property<int>("AbiturientLmsEventId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AbiturientId");

                    b.Property<bool>("IsAccepted");

                    b.Property<int>("LmsEventId");

                    b.HasKey("AbiturientLmsEventId");

                    b.HasIndex("AbiturientId");

                    b.HasIndex("LmsEventId");

                    b.ToTable("AbiturientLmsEvents");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientStatus", b =>
                {
                    b.Property<int>("AbiturientStatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AbiturientStatusName");

                    b.HasKey("AbiturientStatusId");

                    b.ToTable("AbiturientStatuses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AdmissionPrivilege", b =>
                {
                    b.Property<int>("AdmissionPrivilegeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdmissionPrivilegeTypeId");

                    b.Property<int>("ApplicationForAdmissionId");

                    b.Property<int?>("FileModelId");

                    b.Property<string>("Remark");

                    b.Property<int>("RowStatusId");

                    b.HasKey("AdmissionPrivilegeId");

                    b.HasIndex("AdmissionPrivilegeTypeId");

                    b.HasIndex("ApplicationForAdmissionId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("AdmissionPrivileges");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AdmissionPrivilegeType", b =>
                {
                    b.Property<int>("AdmissionPrivilegeTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdmissionPrivilegeTypeName");

                    b.HasKey("AdmissionPrivilegeTypeId");

                    b.ToTable("AdmissionPrivilegeTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.ApplicationForAdmission", b =>
                {
                    b.Property<int>("ApplicationForAdmissionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AbiturientId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduProfileId");

                    b.Property<int?>("FileModelId");

                    b.Property<int>("PriorityId");

                    b.Property<int>("QuotaTypeId");

                    b.Property<string>("RegNumber");

                    b.Property<string>("Remark");

                    b.Property<int>("RowStatusId");

                    b.HasKey("ApplicationForAdmissionId");

                    b.HasIndex("AbiturientId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("QuotaTypeId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("ApplicationForAdmissions");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.EduNapravlEduForm", b =>
                {
                    b.Property<int>("EduNapravlEduFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduNapravlId");

                    b.HasKey("EduNapravlEduFormId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("EduNapravlEduForms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.EduNapravlQuotaType", b =>
                {
                    b.Property<int>("EduNapravlQuotaTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("QuotaTypeId");

                    b.HasKey("EduNapravlQuotaTypeId");

                    b.HasIndex("EduNapravlId");

                    b.HasIndex("QuotaTypeId");

                    b.ToTable("EduNapravlQuotaTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.QuotaType", b =>
                {
                    b.Property<int>("QuotaTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("QuotaTypeName");

                    b.HasKey("QuotaTypeId");

                    b.ToTable("QuotaTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AcademicDegreeGroupId");

                    b.Property<string>("AcademicDegreeName");

                    b.HasKey("AcademicDegreeId");

                    b.HasIndex("AcademicDegreeGroupId");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AcademicDegreeGroup", b =>
                {
                    b.Property<int>("AcademicDegreeGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcademicDegreeGroupName");

                    b.HasKey("AcademicDegreeGroupId");

                    b.ToTable("AcademicDegreeGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AcademicStat", b =>
                {
                    b.Property<int>("AcademicStatId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcademicStatName");

                    b.HasKey("AcademicStatId");

                    b.ToTable("AcademicStats");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AcademicDegreeId");

                    b.Property<int?>("AcademicStatId");

                    b.Property<int>("AccessFailedCount");

                    b.Property<int?>("AddressCurrentId");

                    b.Property<byte[]>("AppUserPhoto");

                    b.Property<int?>("AppUserStatusId");

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("Citizenship");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime?>("DateStartWorking");

                    b.Property<DateTime?>("DateStartWorkingSpec");

                    b.Property<int?>("EduLevelGroupId");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<int?>("GenderId");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<int?>("MilitaryServiceStatusId");

                    b.Property<string>("Nationality");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("Password");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Patronymic");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<DateTime?>("RegisterDateTime");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("AcademicStatId");

                    b.HasIndex("AddressCurrentId")
                        .IsUnique();

                    b.HasIndex("AppUserStatusId");

                    b.HasIndex("EduLevelGroupId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MilitaryServiceStatusId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AppUserStatus", b =>
                {
                    b.Property<int>("AppUserStatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserStatusName");

                    b.HasKey("AppUserStatusId");

                    b.ToTable("AppUserStatuses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.AppSetting", b =>
                {
                    b.Property<int>("AppSettingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppSettingName");

                    b.Property<int>("AppSettingValue");

                    b.HasKey("AppSettingId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryName");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DistrictName");

                    b.Property<int?>("GpsGeometryCenterId");

                    b.Property<int>("RegionId");

                    b.HasKey("DistrictId");

                    b.HasIndex("GpsGeometryCenterId");

                    b.HasIndex("RegionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.EducationalInstitution", b =>
                {
                    b.Property<int>("EducationalInstitutionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EducationalInstitutionName");

                    b.Property<int>("EducationalInstitutionTypeId");

                    b.Property<int?>("LocationId");

                    b.HasKey("EducationalInstitutionId");

                    b.HasIndex("EducationalInstitutionTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("EducationalInstitutions");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.EducationalInstitutionType", b =>
                {
                    b.Property<int>("EducationalInstitutionTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EducationalInstitutionTypeName");

                    b.HasKey("EducationalInstitutionTypeId");

                    b.ToTable("EducationalInstitutionTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.EmploymentForm", b =>
                {
                    b.Property<int>("EmploymentFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmploymentFormName");

                    b.HasKey("EmploymentFormId");

                    b.ToTable("EmploymentForms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.GpsCoordinate", b =>
                {
                    b.Property<int>("GpsCoordinateId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longitude");

                    b.HasKey("GpsCoordinateId");

                    b.ToTable("GpsCoordinates");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<int?>("GpsCoordinateId");

                    b.HasKey("LocationId");

                    b.HasIndex("AddressId");

                    b.HasIndex("GpsCoordinateId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.PopulatedLocality", b =>
                {
                    b.Property<int>("PopulatedLocalityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DistrictId");

                    b.Property<string>("PopulatedLocalityName");

                    b.Property<int>("PopulatedLocalityTypeId");

                    b.HasKey("PopulatedLocalityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("PopulatedLocalityTypeId");

                    b.ToTable("PopulatedLocalities");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.PopulatedLocalityType", b =>
                {
                    b.Property<int>("PopulatedLocalityTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PopulatedLocalityTypeName");

                    b.Property<string>("PopulatedLocalityTypeNameShort");

                    b.HasKey("PopulatedLocalityTypeId");

                    b.ToTable("PopulatedLocalityTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryId");

                    b.Property<string>("RegionName");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.UserMessageType", b =>
                {
                    b.Property<int>("UserMessageTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserMessageTypeName");

                    b.HasKey("UserMessageTypeId");

                    b.ToTable("UserMessageTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDiscipl", b =>
                {
                    b.Property<int>("BlokDisciplId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlokDisciplNameId");

                    b.Property<int>("EduPlanId");

                    b.HasKey("BlokDisciplId");

                    b.HasIndex("BlokDisciplNameId");

                    b.HasIndex("EduPlanId");

                    b.ToTable("BlokDiscipl");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDisciplChast", b =>
                {
                    b.Property<int>("BlokDisciplChastId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlokDisciplChastNameId");

                    b.Property<int>("BlokDisciplId");

                    b.HasKey("BlokDisciplChastId");

                    b.HasIndex("BlokDisciplChastNameId");

                    b.HasIndex("BlokDisciplId");

                    b.ToTable("BlokDisciplChast");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDisciplChastName", b =>
                {
                    b.Property<int>("BlokDisciplChastNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlokDisciplChastNameName");

                    b.HasKey("BlokDisciplChastNameId");

                    b.ToTable("BlokDisciplChastName");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDisciplName", b =>
                {
                    b.Property<int>("BlokDisciplNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BlokDisciplNameName");

                    b.HasKey("BlokDisciplNameId");

                    b.ToTable("BlokDisciplName");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlokDisciplChastId");

                    b.Property<string>("DisciplineCode");

                    b.Property<int>("DisciplineNameId");

                    b.HasKey("DisciplineId");

                    b.HasIndex("BlokDisciplChastId");

                    b.HasIndex("DisciplineNameId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.DisciplineName", b =>
                {
                    b.Property<int>("DisciplineNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisciplineNameName");

                    b.HasKey("DisciplineNameId");

                    b.ToTable("DisciplineNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.DisciplinePomeshenie", b =>
                {
                    b.Property<int>("DisciplinePomeshenieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("EduPlanEduYearId");

                    b.Property<int>("PomeshenieId");

                    b.HasKey("DisciplinePomeshenieId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("EduPlanEduYearId");

                    b.HasIndex("PomeshenieId");

                    b.ToTable("DisciplinePomeshenies");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduAccred", b =>
                {
                    b.Property<int>("EduAccredId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EduAccredDate");

                    b.Property<DateTime>("EduAccredDateExpiration");

                    b.Property<int?>("EduAccredFileId");

                    b.Property<string>("EduAccredNumber");

                    b.HasKey("EduAccredId");

                    b.HasIndex("EduAccredFileId");

                    b.ToTable("EduAccreds");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduAnnotation", b =>
                {
                    b.Property<int>("EduAnnotationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("FileModelId");

                    b.HasKey("EduAnnotationId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("FileModelId");

                    b.ToTable("EduAnnotations");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduChislen", b =>
                {
                    b.Property<int>("EduChislenId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("NumberBFpriem");

                    b.Property<int>("NumberBMpriem");

                    b.Property<int>("NumberBRpriem");

                    b.Property<int>("NumberPpriem");

                    b.HasKey("EduChislenId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduProfileId");

                    b.ToTable("EduChislens");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduForm", b =>
                {
                    b.Property<int>("EduFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduFormName");

                    b.HasKey("EduFormId");

                    b.ToTable("EduForms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduKurs", b =>
                {
                    b.Property<int>("EduKursId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduKursName");

                    b.Property<int>("EduKursNumber");

                    b.HasKey("EduKursId");

                    b.ToTable("EduKurses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduLevel", b =>
                {
                    b.Property<int>("EduLevelId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduLevelName");

                    b.HasKey("EduLevelId");

                    b.ToTable("EduLevels");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduNapravl", b =>
                {
                    b.Property<int>("EduNapravlId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduNapravlCode");

                    b.Property<string>("EduNapravlName");

                    b.Property<string>("EduNapravlStandartDocLink");

                    b.Property<string>("EduNapravlStandartDocLinkFgos3pp");

                    b.Property<int>("EduQualificationId");

                    b.Property<int>("EduUgsId");

                    b.HasKey("EduNapravlId");

                    b.HasIndex("EduQualificationId");

                    b.HasIndex("EduUgsId");

                    b.ToTable("EduNapravls");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduNapravlEduFormEduSrok", b =>
                {
                    b.Property<int>("EduNapravlEduFormEduSrokId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("EduSrokId");

                    b.HasKey("EduNapravlEduFormEduSrokId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduNapravlId");

                    b.HasIndex("EduSrokId");

                    b.ToTable("EduNapravlEduFormEduSroks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlan", b =>
                {
                    b.Property<int>("EduPlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int?>("EduPlanPdfId");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("EduProgramPodgId");

                    b.Property<int>("EduSrokId");

                    b.Property<DateTime>("ProtokolDate");

                    b.Property<string>("ProtokolNumber");

                    b.Property<int>("StructKafId");

                    b.Property<DateTime>("UtverjdDate");

                    b.HasKey("EduPlanId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduPlanPdfId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("EduProgramPodgId");

                    b.HasIndex("EduSrokId");

                    b.HasIndex("StructKafId");

                    b.ToTable("EduPlans");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduVidDeyat", b =>
                {
                    b.Property<int>("EduPlanEduVidDeyatId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduPlanId");

                    b.Property<int>("EduVidDeyatId");

                    b.HasKey("EduPlanEduVidDeyatId");

                    b.HasIndex("EduPlanId");

                    b.HasIndex("EduVidDeyatId");

                    b.ToTable("EduPlanEduVidDeyats");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduYear", b =>
                {
                    b.Property<int>("EduPlanEduYearId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduPlanId");

                    b.Property<int>("EduYearId");

                    b.HasKey("EduPlanEduYearId");

                    b.HasIndex("EduPlanId");

                    b.HasIndex("EduYearId");

                    b.ToTable("EduPlanEduYears");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduYearBeginningTraining", b =>
                {
                    b.Property<int>("EduPlanEduYearBeginningTrainingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduPlanId");

                    b.Property<int>("EduYearBeginningTrainingId");

                    b.HasKey("EduPlanEduYearBeginningTrainingId");

                    b.HasIndex("EduPlanId");

                    b.HasIndex("EduYearBeginningTrainingId");

                    b.ToTable("EduPlanEduYearBeginningTraining");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPriem", b =>
                {
                    b.Property<int>("EduPriemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduNapravlId");

                    b.Property<string>("FinBF");

                    b.Property<string>("FinBM");

                    b.Property<string>("FinBR");

                    b.Property<string>("FinPV");

                    b.Property<double>("SredSum");

                    b.HasKey("EduPriemId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("EduPriem");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProfile", b =>
                {
                    b.Property<int>("EduProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<string>("EduProfileName");

                    b.HasKey("EduProfileId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("EduProfiles");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgram", b =>
                {
                    b.Property<int>("EduProgramId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateUtverjd");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("EduProgramPodgId");

                    b.Property<int>("FileModelId");

                    b.Property<bool>("IsAdopt");

                    b.Property<string>("UsingElAndDistEduTech");

                    b.HasKey("EduProgramId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("EduProgramPodgId");

                    b.HasIndex("FileModelId");

                    b.ToTable("EduPrograms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduForm", b =>
                {
                    b.Property<int>("EduProgramEduFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduProgramId");

                    b.HasKey("EduProgramEduFormId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduProgramId");

                    b.ToTable("EduProgramEduForms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduYear", b =>
                {
                    b.Property<int>("EduProgramEduYearId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProgramId");

                    b.Property<int>("EduYearId");

                    b.HasKey("EduProgramEduYearId");

                    b.HasIndex("EduProgramId");

                    b.HasIndex("EduYearId");

                    b.ToTable("EduProgramEduYears");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduYearBeginningTraining", b =>
                {
                    b.Property<int>("EduProgramEduYearBeginningTrainingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProgramId");

                    b.Property<int>("EduYearBeginningTrainingId");

                    b.HasKey("EduProgramEduYearBeginningTrainingId");

                    b.HasIndex("EduProgramId");

                    b.HasIndex("EduYearBeginningTrainingId");

                    b.ToTable("EduProgramEduYearBeginningTraining");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramPodg", b =>
                {
                    b.Property<int>("EduProgramPodgId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduProgramPodgName");

                    b.HasKey("EduProgramPodgId");

                    b.ToTable("EduProgramPodg");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduQualification", b =>
                {
                    b.Property<int>("EduQualificationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduQualificationName");

                    b.HasKey("EduQualificationId");

                    b.ToTable("EduQualification");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduShedule", b =>
                {
                    b.Property<int>("EduSheduleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("EduYearId");

                    b.Property<int>("FileModelId");

                    b.HasKey("EduSheduleId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("EduYearId");

                    b.HasIndex("FileModelId");

                    b.ToTable("EduShedules");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduSrok", b =>
                {
                    b.Property<int>("EduSrokId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduSrokName");

                    b.HasKey("EduSrokId");

                    b.ToTable("EduSrok");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduUgs", b =>
                {
                    b.Property<int>("EduUgsId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EduAccredId");

                    b.Property<int>("EduLevelId");

                    b.Property<string>("EduUgsCode");

                    b.Property<string>("EduUgsName");

                    b.HasKey("EduUgsId");

                    b.HasIndex("EduAccredId");

                    b.HasIndex("EduLevelId");

                    b.ToTable("EduUgses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduVidDeyat", b =>
                {
                    b.Property<int>("EduVidDeyatId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduVidDeyatName");

                    b.HasKey("EduVidDeyatId");

                    b.ToTable("EduVidDeyat");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduYear", b =>
                {
                    b.Property<int>("EduYearId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduYearName");

                    b.HasKey("EduYearId");

                    b.ToTable("EduYears");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduYearBeginningTraining", b =>
                {
                    b.Property<int>("EduYearBeginningTrainingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduYearBeginningTrainingName");

                    b.HasKey("EduYearBeginningTrainingId");

                    b.ToTable("EduYearBeginningTrainings");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.FondOcenochnihSredstv", b =>
                {
                    b.Property<int>("FondOcenochnihSredstvId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("FileModelId");

                    b.HasKey("FondOcenochnihSredstvId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("FileModelId");

                    b.ToTable("FondOcenochnihSredstvs");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.FormKontrolName", b =>
                {
                    b.Property<int>("FormKontrolNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FormKontrolNameName");

                    b.HasKey("FormKontrolNameId");

                    b.ToTable("FormKontrolNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Kurs", b =>
                {
                    b.Property<int>("KursId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("EduKursId");

                    b.HasKey("KursId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("EduKursId");

                    b.ToTable("Kurses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.RabProgram", b =>
                {
                    b.Property<int>("RabProgramId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("FileModelId");

                    b.HasKey("RabProgramId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("FileModelId");

                    b.ToTable("RabPrograms");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Semestr", b =>
                {
                    b.Property<int>("SemestrId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KursId");

                    b.Property<int>("SemestrNameId");

                    b.HasKey("SemestrId");

                    b.HasIndex("KursId");

                    b.HasIndex("SemestrNameId");

                    b.ToTable("Semestres");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.SemestrFormKontrolName", b =>
                {
                    b.Property<int>("SemestrFormKontrolNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FormKontrolNameId");

                    b.Property<int>("SemestrId");

                    b.HasKey("SemestrFormKontrolNameId");

                    b.HasIndex("FormKontrolNameId");

                    b.HasIndex("SemestrId");

                    b.ToTable("SemestrFormKontrolName");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.SemestrName", b =>
                {
                    b.Property<int>("SemestrNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SemestrNameName");

                    b.Property<int>("SemestrNameNumber");

                    b.HasKey("SemestrNameId");

                    b.ToTable("SemestrNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.SemestrVidUchebRaboti", b =>
                {
                    b.Property<int>("SemestrVidUchebRabotiId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Hour");

                    b.Property<int>("SemestrId");

                    b.Property<int>("VidUchebRabotiNameId");

                    b.HasKey("SemestrVidUchebRabotiId");

                    b.HasIndex("SemestrId");

                    b.HasIndex("VidUchebRabotiNameId");

                    b.ToTable("SemestrVidUchebRaboti");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.VidUchebRabotiName", b =>
                {
                    b.Property<int>("VidUchebRabotiNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("VidUchebRabotiNameName");

                    b.HasKey("VidUchebRabotiNameId");

                    b.ToTable("VidUchebRabotiNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.EduGraduate", b =>
                {
                    b.Property<int>("EduGraduateId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProfileId");

                    b.Property<int>("GraduateNumber");

                    b.Property<string>("GraduateSredBall");

                    b.Property<int>("GraduateYearId");

                    b.HasKey("EduGraduateId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("GraduateYearId");

                    b.ToTable("EduGraduate");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.EduLevelGroup", b =>
                {
                    b.Property<int>("EduLevelGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduLevelGroupName");

                    b.HasKey("EduLevelGroupId");

                    b.ToTable("EduLevelGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.ElectronCatalog", b =>
                {
                    b.Property<int>("ElectronCatalogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescriptionEc");

                    b.Property<string>("NameEc");

                    b.HasKey("ElectronCatalogId");

                    b.ToTable("ElectronCatalog");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileDataType", b =>
                {
                    b.Property<int>("FileDataTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FileDataTypeGroupId");

                    b.Property<string>("FileDataTypeName");

                    b.Property<string>("Itemprop");

                    b.HasKey("FileDataTypeId");

                    b.HasIndex("FileDataTypeGroupId");

                    b.ToTable("FileDataTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileDataTypeGroup", b =>
                {
                    b.Property<int>("FileDataTypeGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FileDataTypeGroupName");

                    b.HasKey("FileDataTypeGroupId");

                    b.ToTable("FileDataTypeGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentType");

                    b.Property<string>("FileName");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<DateTime>("UploadDate");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Files.UserDocument", b =>
                {
                    b.Property<int>("UserDocumentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int>("FileDataTypeId");

                    b.Property<int>("FileModelId");

                    b.Property<string>("Remark");

                    b.Property<int?>("RowStatusId");

                    b.HasKey("UserDocumentId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("FileDataTypeId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("UserDocuments");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileToFileType", b =>
                {
                    b.Property<int>("FileToFileTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FileDataTypeId");

                    b.Property<int>("FileModelId");

                    b.HasKey("FileToFileTypeId");

                    b.HasIndex("FileDataTypeId");

                    b.HasIndex("FileModelId");

                    b.ToTable("FileToFileTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.GraduateTrudoustroustvo", b =>
                {
                    b.Property<int>("GraduateTrudoustroustvoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProfileId");

                    b.Property<int>("GraduateTrudoustroustvoNumber");

                    b.Property<int>("GraduateYearId");

                    b.HasKey("GraduateTrudoustroustvoId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("GraduateYearId");

                    b.ToTable("GraduateTrudoustroustvo");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.GraduateYear", b =>
                {
                    b.Property<int>("GraduateYearId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GraduateYearName");

                    b.HasKey("GraduateYearId");

                    b.ToTable("GraduateYear");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.AppUserLmsEvent", b =>
                {
                    b.Property<int>("AppUserLmsEventId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int>("AppUserLmsEventUserRoleId");

                    b.Property<string>("LmsEventId");

                    b.Property<int?>("LmsEventId1");

                    b.HasKey("AppUserLmsEventId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("AppUserLmsEventUserRoleId");

                    b.HasIndex("LmsEventId1");

                    b.ToTable("AppUserLmsEvents");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.AppUserLmsEventUserRole", b =>
                {
                    b.Property<int>("AppUserLmsEventUserRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserLmsEventUserRoleName");

                    b.HasKey("AppUserLmsEventUserRoleId");

                    b.ToTable("AppUserLmsEventUserRoles");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEvent", b =>
                {
                    b.Property<int>("LmsEventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTimeStart");

                    b.Property<string>("Description");

                    b.Property<TimeSpan>("Duration");

                    b.Property<bool>("IsLmsEventStartedManual");

                    b.Property<int>("LmsEventTypeId");

                    b.Property<string>("WebLink");

                    b.HasKey("LmsEventId");

                    b.HasIndex("LmsEventTypeId");

                    b.ToTable("LmsEvents");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventAdditionalMaterial", b =>
                {
                    b.Property<int>("LmsEventAdditionalMaterialId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LmsEventAdditionalMaterialLink");

                    b.Property<string>("LmsEventAdditionalMaterialName");

                    b.Property<int>("LmsEventId");

                    b.HasKey("LmsEventAdditionalMaterialId");

                    b.HasIndex("LmsEventId");

                    b.ToTable("LmsEventAdditionalMaterials");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventChatMessage", b =>
                {
                    b.Property<int>("LmsEventChatMessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("LmsEventChatMessageLink");

                    b.Property<string>("LmsEventChatMessageText");

                    b.Property<int?>("LmsEventId");

                    b.HasKey("LmsEventChatMessageId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("LmsEventId");

                    b.ToTable("LmsEventChatMessages");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventLmsTaskSet", b =>
                {
                    b.Property<int>("LmsEventLmsTaskSetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LmsEventId");

                    b.Property<int>("LmsTaskSetId");

                    b.HasKey("LmsEventLmsTaskSetId");

                    b.HasIndex("LmsEventId");

                    b.HasIndex("LmsTaskSetId");

                    b.ToTable("LmsEventLmsTaskSets");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventType", b =>
                {
                    b.Property<int>("LmsEventTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LmsEventTypeGroupId");

                    b.Property<string>("LmsEventTypeName");

                    b.HasKey("LmsEventTypeId");

                    b.HasIndex("LmsEventTypeGroupId");

                    b.ToTable("LmsEventTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventTypeGroup", b =>
                {
                    b.Property<int>("LmsEventTypeGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LmsEventTypeGroupName");

                    b.HasKey("LmsEventTypeGroupId");

                    b.ToTable("LmsEventTypeGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTask", b =>
                {
                    b.Property<int>("LmsTaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("DateTimeOfCreation");

                    b.Property<int?>("LmsTaskJpgId");

                    b.Property<string>("LmsTaskText");

                    b.Property<int>("LmsTaskTypeId");

                    b.HasKey("LmsTaskId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("LmsTaskJpgId");

                    b.HasIndex("LmsTaskTypeId");

                    b.ToTable("LmsTasks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskDisciplineName", b =>
                {
                    b.Property<int>("LmsTaskDisciplineNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineNameId");

                    b.Property<int>("LmsTaskId");

                    b.HasKey("LmsTaskDisciplineNameId");

                    b.HasIndex("DisciplineNameId");

                    b.HasIndex("LmsTaskId");

                    b.ToTable("LmsTaskDisciplineNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskSet", b =>
                {
                    b.Property<int>("LmsTaskSetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LmsTaskSetDescription");

                    b.HasKey("LmsTaskSetId");

                    b.ToTable("LmsTaskSets");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskSetLmsTask", b =>
                {
                    b.Property<int>("LmsTaskSetLmsTaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LmsTaskId");

                    b.Property<int>("LmsTaskSetId");

                    b.HasKey("LmsTaskSetLmsTaskId");

                    b.HasIndex("LmsTaskId");

                    b.HasIndex("LmsTaskSetId");

                    b.ToTable("LmsTaskSetLmsTasks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskType", b =>
                {
                    b.Property<int>("LmsTaskTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LmsTaskTypeName");

                    b.HasKey("LmsTaskTypeId");

                    b.ToTable("LmsTaskTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArticleName");

                    b.Property<int?>("FileModelId");

                    b.Property<string>("Pages");

                    b.Property<int?>("RowStatusId");

                    b.Property<int>("ScienceJournalId");

                    b.Property<string>("VipuskNumber");

                    b.Property<int?>("YearId");

                    b.HasKey("ArticleId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("RowStatusId");

                    b.HasIndex("ScienceJournalId");

                    b.HasIndex("YearId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleAuthor", b =>
                {
                    b.Property<int>("ArticleAuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<int>("AuthorId");

                    b.Property<decimal>("AuthorPart");

                    b.HasKey("ArticleAuthorId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("AuthorId");

                    b.ToTable("ArticleAuthors");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleNirSpecial", b =>
                {
                    b.Property<int>("ArticleNirSpecialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<int>("NirSpecialId");

                    b.HasKey("ArticleNirSpecialId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("NirSpecialId");

                    b.ToTable("ArticleNirSpecials");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleNirTema", b =>
                {
                    b.Property<int>("ArticleNirTemaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<int>("NirTemaId");

                    b.HasKey("ArticleNirTemaId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("NirTemaId");

                    b.ToTable("ArticleNirTemas");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.CitationBase", b =>
                {
                    b.Property<int>("CitationBaseId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CitationBaseName");

                    b.HasKey("CitationBaseId");

                    b.ToTable("CitationBases");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Monograf", b =>
                {
                    b.Property<int>("MonografId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FileModelId");

                    b.Property<bool>("IsACHII");

                    b.Property<string>("MonografName");

                    b.Property<int?>("RowStatusId");

                    b.Property<int?>("YearId");

                    b.HasKey("MonografId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("RowStatusId");

                    b.HasIndex("YearId");

                    b.ToTable("Monografs");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografAuthor", b =>
                {
                    b.Property<int>("MonografAuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<decimal>("AuthorPart");

                    b.Property<int>("MonografId");

                    b.HasKey("MonografAuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MonografId");

                    b.ToTable("MonografAuthors");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografNirSpecial", b =>
                {
                    b.Property<int>("MonografNirSpecialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MonografId");

                    b.Property<int>("NirSpecialId");

                    b.HasKey("MonografNirSpecialId");

                    b.HasIndex("MonografId");

                    b.HasIndex("NirSpecialId");

                    b.ToTable("MonografNirSpecials");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografNirTema", b =>
                {
                    b.Property<int>("MonografNirTemaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MonografId");

                    b.Property<int>("NirTemaId");

                    b.HasKey("MonografNirTemaId");

                    b.HasIndex("MonografId");

                    b.HasIndex("NirTemaId");

                    b.ToTable("MonografNirTemas");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.NirSpecial", b =>
                {
                    b.Property<int>("NirSpecialId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NirSpecialCode");

                    b.Property<string>("NirSpecialName");

                    b.HasKey("NirSpecialId");

                    b.ToTable("NirSpecials");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.NirSpecialEduProfile", b =>
                {
                    b.Property<int>("NirSpecialEduProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProfileId");

                    b.Property<int>("NirSpecialId");

                    b.HasKey("NirSpecialEduProfileId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("NirSpecialId");

                    b.ToTable("NirSpecialEduProfiles");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Patent", b =>
                {
                    b.Property<int>("PatentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FileModelId");

                    b.Property<bool>("IsACHII");

                    b.Property<bool>("IsZarubejn");

                    b.Property<string>("PatentName");

                    b.Property<string>("PatentNumber");

                    b.Property<string>("PatentOwner");

                    b.Property<int?>("PatentVidId");

                    b.Property<int?>("RowStatusId");

                    b.Property<int?>("YearId");

                    b.HasKey("PatentId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("PatentVidId");

                    b.HasIndex("RowStatusId");

                    b.HasIndex("YearId");

                    b.ToTable("Patents");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentAuthor", b =>
                {
                    b.Property<int>("PatentAuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<decimal>("AuthorPart");

                    b.Property<int>("PatentId");

                    b.HasKey("PatentAuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PatentId");

                    b.ToTable("PatentAuthors");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentNirSpecial", b =>
                {
                    b.Property<int>("PatentNirSpecialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NirSpecialId");

                    b.Property<int>("PatentId");

                    b.HasKey("PatentNirSpecialId");

                    b.HasIndex("NirSpecialId");

                    b.HasIndex("PatentId");

                    b.ToTable("PatentNirSpecials");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentNirTema", b =>
                {
                    b.Property<int>("PatentNirTemaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NirTemaId");

                    b.Property<int>("PatentId");

                    b.HasKey("PatentNirTemaId");

                    b.HasIndex("NirTemaId");

                    b.HasIndex("PatentId");

                    b.ToTable("PatentNirTemas");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentVid", b =>
                {
                    b.Property<int>("PatentVidId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PatentVidGroupId");

                    b.Property<string>("PatentVidName");

                    b.HasKey("PatentVidId");

                    b.HasIndex("PatentVidGroupId");

                    b.ToTable("PatentVids");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentVidGroup", b =>
                {
                    b.Property<int>("PatentVidGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PatentVidGroupName");

                    b.HasKey("PatentVidGroupId");

                    b.ToTable("PatentVidGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ScienceJournal", b =>
                {
                    b.Property<int>("ScienceJournalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ELibraryLink");

                    b.Property<bool>("IsVak");

                    b.Property<bool>("IsZarubejn");

                    b.Property<string>("ScienceJournalName");

                    b.HasKey("ScienceJournalId");

                    b.ToTable("ScienceJournals");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ScienceJournalAddingClaim", b =>
                {
                    b.Property<int>("ScienceJournalAddingClaimId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("CitationBasesList");

                    b.Property<string>("ELibraryLink");

                    b.Property<bool>("IsVak");

                    b.Property<bool>("IsZarubejn");

                    b.Property<int?>("RowStatusId");

                    b.Property<string>("ScienceJournalName");

                    b.HasKey("ScienceJournalAddingClaimId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("ScienceJournalAddingClaims");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ScienceJournalCitationBase", b =>
                {
                    b.Property<int>("ScienceJournalCitationBaseId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CitationBaseId");

                    b.Property<int>("ScienceJournalId");

                    b.HasKey("ScienceJournalCitationBaseId");

                    b.HasIndex("CitationBaseId");

                    b.HasIndex("ScienceJournalId");

                    b.ToTable("ScienceJournalCitationBases");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Year", b =>
                {
                    b.Property<int>("YearId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("YearName");

                    b.HasKey("YearId");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.NirTema", b =>
                {
                    b.Property<int>("NirTemaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NirTemaName");

                    b.HasKey("NirTemaId");

                    b.ToTable("NirTema");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.NirTemaEduProfile", b =>
                {
                    b.Property<int>("NirTemaEduProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProfileId");

                    b.Property<int>("NirTemaId");

                    b.HasKey("NirTemaEduProfileId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("NirTemaId");

                    b.ToTable("NirTemaEduProfile");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.BlankNum", b =>
                {
                    b.Property<int>("BlankNumId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("Och");

                    b.Property<int>("OchZaoch");

                    b.Property<int>("Zaoch");

                    b.HasKey("BlankNumId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("BlankNums");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.EduPerevod", b =>
                {
                    b.Property<int>("EduPerevodId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduNapravlId");

                    b.Property<string>("NumberExpPerevod");

                    b.Property<string>("NumberOutPerevod");

                    b.Property<string>("NumberResPerevod");

                    b.Property<string>("NumberToPerevod");

                    b.HasKey("EduPerevodId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("eduPerevod");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.PriemExam", b =>
                {
                    b.Property<int>("PriemExamId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<string>("FormProv");

                    b.Property<string>("MinKol");

                    b.Property<string>("VstupIsp");

                    b.HasKey("PriemExamId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("PriemExam");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.Vacant", b =>
                {
                    b.Property<int>("VacantId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduKursId");

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("NumberBFVacant");

                    b.Property<int>("NumberBMVacant");

                    b.Property<int>("NumberBRVacant");

                    b.Property<int>("NumberPVacant");

                    b.HasKey("VacantId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduKursId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("Vacants");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.priemKolMest", b =>
                {
                    b.Property<int>("priemKolMestId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("PriemKolMestCommon_och");

                    b.Property<int>("PriemKolMestCommon_och_zaoch");

                    b.Property<int>("PriemKolMestCommon_zaoch");

                    b.Property<int>("PriemKolMestPaid_och");

                    b.Property<int>("PriemKolMestPaid_och_zaoch");

                    b.Property<int>("PriemKolMestPaid_zaoch");

                    b.Property<int>("priemKolMestQuota_och");

                    b.Property<int>("priemKolMestQuota_och_zaoch");

                    b.Property<int>("priemKolMestQuota_zaoch");

                    b.HasKey("priemKolMestId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("priemKolMest");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.priemKolTarget", b =>
                {
                    b.Property<int>("priemKolTargetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("Mesta_v_pridelah_celevoi_och");

                    b.Property<int>("Mesta_v_pridelah_celevoi_och_zaoch");

                    b.Property<int>("Mesta_v_pridelah_celevoi_zaoch");

                    b.Property<int>("Mesta_v_pridelah_osoboi_och");

                    b.Property<int>("Mesta_v_pridelah_osoboi_och_zaoch");

                    b.Property<int>("Mesta_v_pridelah_osoboi_zaoch");

                    b.Property<int>("Mesta_v_ramkah_och_zaoch");

                    b.Property<int>("Mesta_v_ramkah_zaoch");

                    b.Property<int>("Mesta_v_ramkahtQuota_och");

                    b.HasKey("priemKolTargetId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("priemKolTarget");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.PurposeLibr", b =>
                {
                    b.Property<int>("PurposeLibrId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("NumberPlaces");

                    b.Property<string>("PrisposoblOvz");

                    b.Property<string>("Square");

                    b.Property<string>("VidPom");

                    b.Property<string>("itemprop");

                    b.HasKey("PurposeLibrId");

                    b.ToTable("PurposeLibr");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("NapravlName");

                    b.Property<string>("QualificationName");

                    b.Property<int?>("RowStatusId");

                    b.HasKey("QualificationId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.RowStatus", b =>
                {
                    b.Property<int>("RowStatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RowStatusName");

                    b.HasKey("RowStatusId");

                    b.ToTable("RowStatuses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("HouseNumber")
                        .IsRequired();

                    b.Property<int?>("PopulatedLocalityId");

                    b.Property<string>("PostCode")
                        .IsRequired();

                    b.Property<string>("Region")
                        .IsRequired();

                    b.Property<string>("Settlement")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("AddressId");

                    b.HasIndex("PopulatedLocalityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailComment");

                    b.Property<string>("EmailValue");

                    b.Property<int?>("StructInstituteId");

                    b.Property<int?>("StructUniversityId");

                    b.HasKey("EmailId");

                    b.HasIndex("StructInstituteId");

                    b.HasIndex("StructUniversityId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Fax", b =>
                {
                    b.Property<int>("FaxId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FaxComment");

                    b.Property<string>("FaxValue");

                    b.Property<int?>("StructInstituteId");

                    b.Property<int?>("StructUniversityId");

                    b.HasKey("FaxId");

                    b.HasIndex("StructInstituteId");

                    b.HasIndex("StructUniversityId");

                    b.ToTable("Faxes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.InstituteLink", b =>
                {
                    b.Property<int>("InstituteLinkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InstituteLinkDescription");

                    b.Property<string>("InstituteLinkLink");

                    b.Property<int>("LinkTypeId");

                    b.Property<int>("StructInstituteId");

                    b.HasKey("InstituteLinkId");

                    b.HasIndex("LinkTypeId");

                    b.HasIndex("StructInstituteId");

                    b.ToTable("InstituteLinks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.LinkType", b =>
                {
                    b.Property<int>("LinkTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LinkTypeName");

                    b.HasKey("LinkTypeId");

                    b.ToTable("LinkTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.MetodKomissiya", b =>
                {
                    b.Property<int>("MetodKomissiyaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MetodKomissiyaName");

                    b.HasKey("MetodKomissiyaId");

                    b.ToTable("MetodKomissii");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.MetodKomissiyaEduProfile", b =>
                {
                    b.Property<int>("MetodKomissiyaEduProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduProfileId");

                    b.Property<int>("MetodKomissiyaId");

                    b.HasKey("MetodKomissiyaEduProfileId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("MetodKomissiyaId");

                    b.ToTable("MetodKomissiyaEduProfiles");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PostName");

                    b.HasKey("PostId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructFacultet", b =>
                {
                    b.Property<int>("StructFacultetId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("StructInstituteId");

                    b.Property<int>("StructSubvisionId");

                    b.HasKey("StructFacultetId");

                    b.HasIndex("StructInstituteId");

                    b.HasIndex("StructSubvisionId");

                    b.ToTable("StructFacultets");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructInstitute", b =>
                {
                    b.Property<int>("StructInstituteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<bool>("ExistenceOfFilials");

                    b.Property<string>("StructInstituteName");

                    b.Property<int>("UniversityId");

                    b.Property<string>("WorkingRegime");

                    b.Property<string>("WorkingSchedule");

                    b.HasKey("StructInstituteId");

                    b.HasIndex("AddressId");

                    b.HasIndex("UniversityId");

                    b.ToTable("StructInstitutes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructKaf", b =>
                {
                    b.Property<int>("StructKafId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("StructFacultetId");

                    b.Property<int>("StructSubvisionId");

                    b.HasKey("StructKafId");

                    b.HasIndex("StructFacultetId");

                    b.HasIndex("StructSubvisionId");

                    b.ToTable("StructKafs");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructSubvision", b =>
                {
                    b.Property<int>("StructSubvisionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("StructStandingOrderId");

                    b.Property<string>("StructSubvisionAccountChiefId");

                    b.Property<int>("StructSubvisionAdressId");

                    b.Property<int?>("StructSubvisionEmailId");

                    b.Property<string>("StructSubvisionFioChief");

                    b.Property<string>("StructSubvisionName");

                    b.Property<int>("StructSubvisionPostChiefId");

                    b.Property<string>("StructSubvisionSite");

                    b.Property<int>("StructSubvisionTypeId");

                    b.HasKey("StructSubvisionId");

                    b.HasIndex("StructStandingOrderId");

                    b.HasIndex("StructSubvisionAccountChiefId");

                    b.HasIndex("StructSubvisionAdressId");

                    b.HasIndex("StructSubvisionEmailId");

                    b.HasIndex("StructSubvisionPostChiefId");

                    b.HasIndex("StructSubvisionTypeId");

                    b.ToTable("StructSubvisions");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructSubvisionType", b =>
                {
                    b.Property<int>("StructSubvisionTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("StructSubvisionTypeName");

                    b.HasKey("StructSubvisionTypeId");

                    b.ToTable("StructSubvisionTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructUniversity", b =>
                {
                    b.Property<int>("StructUniversityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<bool>("ExistenceOfFilials");

                    b.Property<string>("StructUniversityName");

                    b.Property<string>("WorkingRegime");

                    b.Property<string>("WorkingSchedule");

                    b.HasKey("StructUniversityId");

                    b.HasIndex("AddressId");

                    b.ToTable("StructUniversities");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Telephone", b =>
                {
                    b.Property<int>("TelephoneId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("StructInstituteId");

                    b.Property<int?>("StructUniversityId");

                    b.Property<string>("TelephoneComment");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("TelephoneId");

                    b.HasIndex("StructInstituteId");

                    b.HasIndex("StructUniversityId");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.MessageFromAppUserToStudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("DateTime");

                    b.Property<int?>("DisciplineNameId");

                    b.Property<string>("Link");

                    b.Property<string>("MessageText");

                    b.Property<int>("StudentGroupId");

                    b.Property<int>("UserMessageTypeId");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DisciplineNameId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("UserMessageTypeId");

                    b.ToTable("MessagesFromAppUsersToStudentGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int?>("RezultOsvoenObrazovatProgrId");

                    b.Property<string>("StudentFio");

                    b.Property<int>("StudentGroupId");

                    b.Property<string>("ZachetnayaKnijkaNumber");

                    b.HasKey("StudentId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RezultOsvoenObrazovatProgrId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.StudentGroup", b =>
                {
                    b.Property<int>("StudentGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("EduKursId");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("KuratorId");

                    b.Property<int>("StructFacultetId");

                    b.Property<string>("StudentGroupNamePrefix");

                    b.Property<int>("StudentGroupNumber");

                    b.HasKey("StudentGroupId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduKursId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("KuratorId");

                    b.HasIndex("StructFacultetId");

                    b.ToTable("StudentGroups");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.Vedomost", b =>
                {
                    b.Property<int>("VedomostId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisciplineName");

                    b.Property<int>("EduYearId");

                    b.Property<int>("SemestrNameId");

                    b.Property<int>("StudentGroupId");

                    b.HasKey("VedomostId");

                    b.HasIndex("EduYearId");

                    b.HasIndex("SemestrNameId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Vedomosti");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.VedomostStudentMark", b =>
                {
                    b.Property<int>("VedomostStudentMarkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("StudentId");

                    b.Property<int>("VedomostId");

                    b.Property<int>("VedomostStudentMarkNameId");

                    b.HasKey("VedomostStudentMarkId");

                    b.HasIndex("StudentId");

                    b.HasIndex("VedomostId");

                    b.HasIndex("VedomostStudentMarkNameId");

                    b.ToTable("VedomostStudentMarks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.VedomostStudentMarkName", b =>
                {
                    b.Property<int>("VedomostStudentMarkNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("VedomostStudentMarkNameName");

                    b.HasKey("VedomostStudentMarkNameId");

                    b.ToTable("VedomostStudentMarkNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduNir", b =>
                {
                    b.Property<int>("EduNirId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<string>("NirNapravls");

                    b.Property<string>("NumArticles");

                    b.Property<string>("NumArticlesZ");

                    b.Property<string>("NumFinance");

                    b.Property<string>("NumMonograf");

                    b.Property<string>("NumNpr");

                    b.Property<string>("NumPatents");

                    b.Property<string>("NumPatentsZ");

                    b.Property<string>("NumStud");

                    b.Property<string>("NumSvidetelstv");

                    b.Property<string>("NumSvidetelstvZ");

                    b.HasKey("EduNirId");

                    b.HasIndex("EduNapravlId");

                    b.ToTable("EduNir");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduOPEduYearName", b =>
                {
                    b.Property<int>("EduOPEduYearNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EduOPEduYearNameName");

                    b.HasKey("EduOPEduYearNameId");

                    b.ToTable("EduOPEduYearNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduOPYear", b =>
                {
                    b.Property<int>("EduOPYearId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduOPEduYearNameId");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("EduYearBeginningTrainingId");

                    b.Property<bool>("IsOVZ");

                    b.Property<string>("VOchn");

                    b.Property<string>("VOchnZaochn");

                    b.Property<string>("VZaochn");

                    b.HasKey("EduOPYearId");

                    b.HasIndex("EduOPEduYearNameId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("EduYearBeginningTrainingId");

                    b.ToTable("EduOPYears");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduPr", b =>
                {
                    b.Property<int>("EduPrId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<string>("EduPrPreddiplomn");

                    b.Property<string>("EduPrProizv");

                    b.Property<string>("EduPrUchebn");

                    b.Property<int>("EduProfileId");

                    b.Property<int>("EduYearBeginningTrainingId");

                    b.Property<bool>("IsOVZ");

                    b.HasKey("EduPrId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("EduYearBeginningTrainingId");

                    b.ToTable("EduPr");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.ElectronBiblSystem", b =>
                {
                    b.Property<int>("ElectronBiblSystemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CopyDogovorId");

                    b.Property<DateTime?>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<string>("LinkEbs");

                    b.Property<string>("NameEbs");

                    b.Property<string>("NumberDogovor");

                    b.HasKey("ElectronBiblSystemId");

                    b.HasIndex("CopyDogovorId");

                    b.ToTable("ElectronBiblSystem");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.ElectronObrazovatInformRes", b =>
                {
                    b.Property<int>("ElectronObrazovatInformResId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DescriptionRes");

                    b.Property<bool>("IsSobstv");

                    b.Property<string>("LinkRes");

                    b.Property<string>("NameRes");

                    b.Property<int?>("ResId");

                    b.HasKey("ElectronObrazovatInformResId");

                    b.HasIndex("ResId");

                    b.ToTable("ElectronObrazovatInformRes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.FilInfo", b =>
                {
                    b.Property<int>("FilInfoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressFil");

                    b.Property<string>("NameFil");

                    b.Property<string>("WebsiteFil");

                    b.HasKey("FilInfoId");

                    b.ToTable("FilInfo");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.HostelInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Itemprop");

                    b.Property<string>("Link");

                    b.Property<string>("NameIndicator");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("HostelInfo");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Korpus", b =>
                {
                    b.Property<int>("KorpusId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<string>("KorpusName");

                    b.HasKey("KorpusId");

                    b.HasIndex("AddressId");

                    b.ToTable("Korpus");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Oborudovanie", b =>
                {
                    b.Property<int>("OborudovanieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OborudovanieCount");

                    b.Property<string>("OborudovanieName");

                    b.Property<int>("PomeshenieId");

                    b.HasKey("OborudovanieId");

                    b.HasIndex("PomeshenieId");

                    b.ToTable("Oborudovanie");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Pomeshenie", b =>
                {
                    b.Property<int>("PomeshenieId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KorpusId");

                    b.Property<string>("PomeshenieName");

                    b.Property<string>("PomeshenieOvz");

                    b.Property<int?>("StructSubvisionId");

                    b.HasKey("PomeshenieId");

                    b.HasIndex("KorpusId");

                    b.HasIndex("StructSubvisionId");

                    b.ToTable("Pomeshenie");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.PomeshenieType", b =>
                {
                    b.Property<int>("PomeshenieTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PomeshenieTypeName");

                    b.HasKey("PomeshenieTypeId");

                    b.ToTable("PomeshenieType");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.PomeshenieTypepomesheniya", b =>
                {
                    b.Property<int>("PomeshenieTypepomesheniyaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PomeshenieId");

                    b.Property<int>("PomeshenieTypeId");

                    b.HasKey("PomeshenieTypepomesheniyaId");

                    b.HasIndex("PomeshenieId");

                    b.HasIndex("PomeshenieTypeId");

                    b.ToTable("PomeshenieTypepomesheniya");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Rucovodstvo", b =>
                {
                    b.Property<int>("RucovodstvoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("Email");

                    b.Property<string>("Fio");

                    b.Property<string>("Post");

                    b.Property<string>("Telephone");

                    b.HasKey("RucovodstvoId");

                    b.HasIndex("AppUserId");

                    b.ToTable("SvedenRucovodstvo");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.RucovodstvoFil", b =>
                {
                    b.Property<int>("RucovodstvoFilId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Fio");

                    b.Property<string>("NameFil");

                    b.Property<string>("Post");

                    b.Property<string>("Telephone");

                    b.HasKey("RucovodstvoFilId");

                    b.ToTable("RucovodstvoFil");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.UchredLaw", b =>
                {
                    b.Property<int>("UchredLawId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressUchred");

                    b.Property<string>("FullnameUchred");

                    b.Property<string>("NameUchred");

                    b.Property<string>("TelUchred");

                    b.Property<string>("WebsiteUchred");

                    b.Property<string>("mailUchred");

                    b.HasKey("UchredLawId");

                    b.ToTable("UchredLaw");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Volume", b =>
                {
                    b.Property<int>("VolumeId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("FinBFVolume");

                    b.Property<double>("FinBMVolume");

                    b.Property<double>("FinBRVolume");

                    b.Property<double>("FinPVolume");

                    b.HasKey("VolumeId");

                    b.ToTable("Volume");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("AuthorName");

                    b.HasKey("AuthorId");

                    b.HasIndex("AppUserId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", b =>
                {
                    b.Property<int>("UchPosobieId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BiblOpisanie");

                    b.Property<int>("FileModelId");

                    b.Property<string>("GodIzdaniya");

                    b.Property<int>("UchPosobieFormaIzdaniyaId");

                    b.Property<string>("UchPosobieName");

                    b.Property<int>("UchPosobieVidId");

                    b.HasKey("UchPosobieId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("UchPosobieFormaIzdaniyaId");

                    b.HasIndex("UchPosobieVidId");

                    b.ToTable("UchPosobie");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieAuthor", b =>
                {
                    b.Property<int>("UchPosobieAuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<int>("UchPosobieId");

                    b.HasKey("UchPosobieAuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("UchPosobieId");

                    b.ToTable("UchPosobieAuthor");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieDisciplineName", b =>
                {
                    b.Property<int>("UchPosobieDisciplineNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineNameId");

                    b.Property<int>("UchPosobieId");

                    b.HasKey("UchPosobieDisciplineNameId");

                    b.HasIndex("DisciplineNameId");

                    b.HasIndex("UchPosobieId");

                    b.ToTable("UchPosobieDisciplineName");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieEduForm", b =>
                {
                    b.Property<int>("UchPosobieEduFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduFormId");

                    b.Property<int>("UchPosobieId");

                    b.HasKey("UchPosobieEduFormId");

                    b.HasIndex("EduFormId");

                    b.HasIndex("UchPosobieId");

                    b.ToTable("UchPosobieEduForm");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieEduNapravl", b =>
                {
                    b.Property<int>("UchPosobieEduNapravlId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EduNapravlId");

                    b.Property<int>("UchPosobieId");

                    b.HasKey("UchPosobieEduNapravlId");

                    b.HasIndex("EduNapravlId");

                    b.HasIndex("UchPosobieId");

                    b.ToTable("UchPosobieEduNapravl");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieFormaIzdaniya", b =>
                {
                    b.Property<int>("UchPosobieFormaIzdaniyaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UchPosobieFormaIzdaniyaName");

                    b.HasKey("UchPosobieFormaIzdaniyaId");

                    b.ToTable("UchPosobieFormaIzdaniya");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieVid", b =>
                {
                    b.Property<int>("UchPosobieVidId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UchPosobieVidName");

                    b.HasKey("UchPosobieVidId");

                    b.ToTable("UchPosobieVid");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.AppUserForeignLanguage", b =>
                {
                    b.Property<int>("AppUserForeignLanguageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int>("ForeignLanguageId");

                    b.HasKey("AppUserForeignLanguageId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ForeignLanguageId");

                    b.ToTable("AppUserForeignLanguages");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.AppUserStructSubvision", b =>
                {
                    b.Property<int>("AppUserStructSubvisionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int>("EmploymentFormId");

                    b.Property<int>("PostId");

                    b.Property<int>("StructSubvisionId");

                    b.HasKey("AppUserStructSubvisionId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EmploymentFormId");

                    b.HasIndex("PostId");

                    b.HasIndex("StructSubvisionId");

                    b.ToTable("AppUserStructSubvisions");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.FamilyMemberContact", b =>
                {
                    b.Property<int>("FamilyMemberContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<int>("FamilyMemberTypeId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Patronymic");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("WorkPlace");

                    b.HasKey("FamilyMemberContactId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("FamilyMemberTypeId");

                    b.ToTable("FamilyMemberContacts");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.FamilyMemberType", b =>
                {
                    b.Property<int>("FamilyMemberTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FamilyMemberTypeName");

                    b.HasKey("FamilyMemberTypeId");

                    b.ToTable("FamilyMemberTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.ForeignLanguage", b =>
                {
                    b.Property<int>("ForeignLanguageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ForeignLanguageName");

                    b.HasKey("ForeignLanguageId");

                    b.ToTable("ForeignLanguages");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GenderName");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.MilitaryServiceStatus", b =>
                {
                    b.Property<int>("MilitaryServiceStatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MilitaryServiceStatusName");

                    b.HasKey("MilitaryServiceStatusId");

                    b.ToTable("MilitaryServiceStatuses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.PassportData", b =>
                {
                    b.Property<int>("PassportDataId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("DataVidachi");

                    b.Property<string>("KemVidan")
                        .IsRequired();

                    b.Property<string>("KodPodrazdeleniya")
                        .IsRequired();

                    b.Property<string>("MestoRojdeniya")
                        .IsRequired();

                    b.Property<string>("PassportNumber");

                    b.Property<string>("PassportSeriya");

                    b.Property<int?>("RowStatusId");

                    b.Property<int?>("UserDocumentId");

                    b.HasKey("PassportDataId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.HasIndex("RowStatusId");

                    b.HasIndex("UserDocumentId")
                        .IsUnique();

                    b.ToTable("PassportDataSet");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.ProfessionalRetraining", b =>
                {
                    b.Property<int>("ProfessionalRetrainingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("ProfessionalRetrainingCity");

                    b.Property<DateTime>("ProfessionalRetrainingDateFinish");

                    b.Property<DateTime>("ProfessionalRetrainingDateIssue");

                    b.Property<DateTime>("ProfessionalRetrainingDateStart");

                    b.Property<string>("ProfessionalRetrainingDiplomNumber");

                    b.Property<string>("ProfessionalRetrainingDiplomRegNumber");

                    b.Property<int>("ProfessionalRetrainingFileId");

                    b.Property<int>("ProfessionalRetrainingHours");

                    b.Property<string>("ProfessionalRetrainingInstitition");

                    b.Property<string>("ProfessionalRetrainingProgramName");

                    b.Property<int?>("RowStatusId");

                    b.HasKey("ProfessionalRetrainingId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ProfessionalRetrainingFileId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("ProfessionalRetrainings");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.RefresherCourse", b =>
                {
                    b.Property<int>("RefresherCourseId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<string>("RefresherCourseCity");

                    b.Property<DateTime>("RefresherCourseDateFinish");

                    b.Property<DateTime>("RefresherCourseDateIssue");

                    b.Property<DateTime>("RefresherCourseDateStart");

                    b.Property<int>("RefresherCourseFileId");

                    b.Property<int>("RefresherCourseHours");

                    b.Property<string>("RefresherCourseInstitition");

                    b.Property<string>("RefresherCourseName");

                    b.Property<string>("RefresherCourseRegNumber");

                    b.Property<int?>("RowStatusId");

                    b.HasKey("RefresherCourseId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RefresherCourseFileId");

                    b.HasIndex("RowStatusId");

                    b.ToTable("RefresherCourses");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<bool?>("IsIdle");

                    b.Property<string>("TeacherFio");

                    b.Property<string>("WorkExperienceGeneral");

                    b.Property<string>("WorkExperienceSpecialty");

                    b.HasKey("TeacherId");

                    b.HasIndex("AppUserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherDiscipline", b =>
                {
                    b.Property<int>("TeacherDisciplineId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineId");

                    b.Property<int>("EduPlanEduYearId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TeacherDisciplineId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("EduPlanEduYearId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherDisciplines");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherEduProfileDisciplineName", b =>
                {
                    b.Property<int>("TeacherEduProfileDisciplineNameId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DisciplineNameId");

                    b.Property<int?>("EduProfileId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TeacherEduProfileDisciplineNameId");

                    b.HasIndex("DisciplineNameId");

                    b.HasIndex("EduProfileId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherEduProfileDisciplineNames");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherMetodKomissiya", b =>
                {
                    b.Property<int>("TeacherMetodKomissiyaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MetodKomissiyaId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TeacherMetodKomissiyaId");

                    b.HasIndex("MetodKomissiyaId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherMetodKomissiya");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherStructKafPostStavka", b =>
                {
                    b.Property<int>("TeacherStructKafPostStavkaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EmploymentFormId");

                    b.Property<int>("PostId");

                    b.Property<double>("Stavka");

                    b.Property<DateTime>("StavkaDate");

                    b.Property<int>("StructKafId");

                    b.Property<int>("TeacherId");

                    b.HasKey("TeacherStructKafPostStavkaId");

                    b.HasIndex("EmploymentFormId");

                    b.HasIndex("PostId");

                    b.HasIndex("StructKafId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherStructKafPostStavka");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserAchievment", b =>
                {
                    b.Property<int>("UserAchievmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("UserAchievmentTypeId");

                    b.HasKey("UserAchievmentId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("UserAchievmentTypeId");

                    b.ToTable("UserAchievments");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserAchievmentType", b =>
                {
                    b.Property<int>("UserAchievmentTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserAchievmentTypeName");

                    b.HasKey("UserAchievmentTypeId");

                    b.ToTable("UserAchievmentTypes");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserEducation", b =>
                {
                    b.Property<int>("UserEducationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("EducationDocumentDate");

                    b.Property<string>("EducationDocumentNumber");

                    b.Property<string>("EducationDocumentNumberReg");

                    b.Property<string>("EducationDocumentSeries");

                    b.Property<int?>("EducationalInstitutionId");

                    b.Property<int>("FileDataTypeId");

                    b.Property<int?>("QualificationId");

                    b.Property<string>("Remark");

                    b.Property<int?>("RowStatusId");

                    b.Property<int?>("UserDocumentId");

                    b.HasKey("UserEducationId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EducationalInstitutionId");

                    b.HasIndex("FileDataTypeId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("RowStatusId");

                    b.HasIndex("UserDocumentId");

                    b.ToTable("UserEducations");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserMessage", b =>
                {
                    b.Property<int>("UserMessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("IsReadedByReceiver");

                    b.Property<DateTime>("UserMessageDate");

                    b.Property<string>("UserMessageText")
                        .IsRequired();

                    b.Property<string>("UserReceiverId");

                    b.Property<string>("UserSenderId");

                    b.HasKey("UserMessageId");

                    b.HasIndex("UserReceiverId");

                    b.HasIndex("UserSenderId");

                    b.ToTable("UserMessages");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWork", b =>
                {
                    b.Property<int>("UserWorkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppUserId");

                    b.Property<DateTime>("DatePosting");

                    b.Property<int?>("FileModelId");

                    b.Property<string>("UserWorkDescription");

                    b.Property<string>("UserWorkName");

                    b.Property<int>("UserWorkTypeId");

                    b.HasKey("UserWorkId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("UserWorkTypeId");

                    b.ToTable("UserWorks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWorkReview", b =>
                {
                    b.Property<int>("UserWorkReviewId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FileModelId");

                    b.Property<string>("ReviewerId");

                    b.Property<int>("UserWorkId");

                    b.Property<int>("UserWorkReviewMarkId");

                    b.Property<string>("UserWorkReviewText");

                    b.HasKey("UserWorkReviewId");

                    b.HasIndex("FileModelId");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("UserWorkId");

                    b.HasIndex("UserWorkReviewMarkId");

                    b.ToTable("UserWorkReviews");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWorkReviewMark", b =>
                {
                    b.Property<int>("UserWorkReviewMarkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserWorkReviewMarkName");

                    b.HasKey("UserWorkReviewMarkId");

                    b.ToTable("UserWorkReviewMarks");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWorkType", b =>
                {
                    b.Property<int>("UserWorkTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserWorkTypeName");

                    b.HasKey("UserWorkTypeId");

                    b.ToTable("UserWorkTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.Abiturient", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.AbiturientStatus", "AbiturientStatus")
                        .WithMany()
                        .HasForeignKey("AbiturientStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithOne("Abiturient")
                        .HasForeignKey("KisVuzDotNetCore2.Models.Abitur.Abiturient", "AppUserId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientIndividualAchievment", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.Abiturient", "Abiturient")
                        .WithMany("AbiturientIndividualAchievments")
                        .HasForeignKey("AbiturientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.AbiturientIndividualAchievmentType", "AbiturientIndividualAchievmentType")
                        .WithMany("AbiturientIndividualAchievments")
                        .HasForeignKey("AbiturientIndividualAchievmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AbiturientLmsEvent", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.Abiturient", "Abiturient")
                        .WithMany("AbiturientLmsEvents")
                        .HasForeignKey("AbiturientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEvent", "LmsEvent")
                        .WithMany("AbiturientLmsEvents")
                        .HasForeignKey("LmsEventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.AdmissionPrivilege", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.AdmissionPrivilegeType", "AdmissionPrivilegeType")
                        .WithMany()
                        .HasForeignKey("AdmissionPrivilegeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.ApplicationForAdmission", "ApplicationForAdmission")
                        .WithMany("AdmissionPrivileges")
                        .HasForeignKey("ApplicationForAdmissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.ApplicationForAdmission", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.Abiturient", "Abiturient")
                        .WithMany("ApplicationForAdmissions")
                        .HasForeignKey("AbiturientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.QuotaType", "QuotaType")
                        .WithMany()
                        .HasForeignKey("QuotaTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.EduNapravlEduForm", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Abitur.EduNapravlQuotaType", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Abitur.QuotaType", "QuotaType")
                        .WithMany()
                        .HasForeignKey("QuotaTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AcademicDegree", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AcademicDegreeGroup", "AcademicDegreeGroup")
                        .WithMany("AcademicDegrees")
                        .HasForeignKey("AcademicDegreeGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.AppUser", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("AcademicDegreeId");

                    b.HasOne("KisVuzDotNetCore2.Models.AcademicStat", "AcademicStat")
                        .WithMany()
                        .HasForeignKey("AcademicStatId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "AddressCurrent")
                        .WithOne("AppUser")
                        .HasForeignKey("KisVuzDotNetCore2.Models.AppUser", "AddressCurrentId");

                    b.HasOne("KisVuzDotNetCore2.Models.AppUserStatus", "AppUserStatus")
                        .WithMany()
                        .HasForeignKey("AppUserStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.EduLevelGroup", "EduLevelGroup")
                        .WithMany()
                        .HasForeignKey("EduLevelGroupId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.MilitaryServiceStatus", "MilitaryServiceStatus")
                        .WithMany()
                        .HasForeignKey("MilitaryServiceStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.District", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.GpsCoordinate", "GpsGeometryCenter")
                        .WithMany()
                        .HasForeignKey("GpsGeometryCenterId");

                    b.HasOne("KisVuzDotNetCore2.Models.Common.Region", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.EducationalInstitution", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.EducationalInstitutionType", "EducationalInstitutionType")
                        .WithMany("EducationalInstitutions")
                        .HasForeignKey("EducationalInstitutionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Common.Location", "Location")
                        .WithMany("EducationalInstitutions")
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.Location", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("KisVuzDotNetCore2.Models.Common.GpsCoordinate", "GpsCoordinate")
                        .WithMany("Locations")
                        .HasForeignKey("GpsCoordinateId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.PopulatedLocality", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.District", "District")
                        .WithMany("PopulatedLocalities")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Common.PopulatedLocalityType", "PopulatedLocalityType")
                        .WithMany("PopulatedLocalities")
                        .HasForeignKey("PopulatedLocalityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Common.Region", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDiscipl", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.BlokDisciplName", "BlokDisciplName")
                        .WithMany()
                        .HasForeignKey("BlokDisciplNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlan", "EduPlan")
                        .WithMany("BlokDiscipl")
                        .HasForeignKey("EduPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.BlokDisciplChast", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.BlokDisciplChastName", "BlokDisciplChastName")
                        .WithMany()
                        .HasForeignKey("BlokDisciplChastNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.BlokDiscipl", "BlokDiscipl")
                        .WithMany("BlokDisciplChast")
                        .HasForeignKey("BlokDisciplId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Discipline", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.BlokDisciplChast", "BlokDisciplChast")
                        .WithMany("Disciplines")
                        .HasForeignKey("BlokDisciplChastId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.DisciplineName", "DisciplineName")
                        .WithMany()
                        .HasForeignKey("DisciplineNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.DisciplinePomeshenie", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("DisciplinePomeshenies")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlanEduYear", "EduPlanEduYear")
                        .WithMany("DisciplinePomeshenies")
                        .HasForeignKey("EduPlanEduYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.Pomeshenie", "Pomeshenie")
                        .WithMany("DisciplinePomeshenies")
                        .HasForeignKey("PomeshenieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduAccred", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "EduAccredFile")
                        .WithMany()
                        .HasForeignKey("EduAccredFileId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduAnnotation", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("EduAnnotations")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduChislen", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduNapravl", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduQualification", "EduQualification")
                        .WithMany()
                        .HasForeignKey("EduQualificationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduUgs", "EduUgs")
                        .WithMany("EduNapravls")
                        .HasForeignKey("EduUgsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduNapravlEduFormEduSrok", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany("EduNapravlEduFormEduSroks")
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduSrok", "EduSrok")
                        .WithMany()
                        .HasForeignKey("EduSrokId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlan", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "EduPlanPdf")
                        .WithMany()
                        .HasForeignKey("EduPlanPdfId");

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("EduPlans")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProgramPodg", "EduProgramPodg")
                        .WithMany()
                        .HasForeignKey("EduProgramPodgId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduSrok", "EduSrok")
                        .WithMany()
                        .HasForeignKey("EduSrokId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructKaf", "StructKaf")
                        .WithMany()
                        .HasForeignKey("StructKafId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduVidDeyat", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlan", "EduPlan")
                        .WithMany("EduVidDeyatList")
                        .HasForeignKey("EduPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduVidDeyat", "EduVidDeyat")
                        .WithMany()
                        .HasForeignKey("EduVidDeyatId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduYear", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlan", "EduPlan")
                        .WithMany("EduPlanEduYears")
                        .HasForeignKey("EduPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYear", "EduYear")
                        .WithMany()
                        .HasForeignKey("EduYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPlanEduYearBeginningTraining", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlan", "EduPlan")
                        .WithMany("EduPlanEduYearBeginningTrainings")
                        .HasForeignKey("EduPlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYearBeginningTraining", "EduYearBeginningTraining")
                        .WithMany("EduPlanEduYearBeginningTrainings")
                        .HasForeignKey("EduYearBeginningTrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduPriem", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProfile", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany("EduProfiles")
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgram", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("EduPrograms")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProgramPodg", "EduProgramPodg")
                        .WithMany()
                        .HasForeignKey("EduProgramPodgId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduForm", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProgram", "EduProgram")
                        .WithMany("EduProgramEduForms")
                        .HasForeignKey("EduProgramId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduYear", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProgram", "EduProgram")
                        .WithMany("EduProgramEduYears")
                        .HasForeignKey("EduProgramId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYear", "EduYear")
                        .WithMany()
                        .HasForeignKey("EduYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduProgramEduYearBeginningTraining", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProgram", "EduProgram")
                        .WithMany("EduProgramEduYearBeginningTrainings")
                        .HasForeignKey("EduProgramId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYearBeginningTraining", "EduYearBeginningTraining")
                        .WithMany()
                        .HasForeignKey("EduYearBeginningTrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduShedule", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYear", "EduYear")
                        .WithMany()
                        .HasForeignKey("EduYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.EduUgs", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduAccred", "EduAccred")
                        .WithMany("EduAccredUgses")
                        .HasForeignKey("EduAccredId");

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduLevel", "EduLevel")
                        .WithMany("EduUgses")
                        .HasForeignKey("EduLevelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.FondOcenochnihSredstv", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("FondOcenochnihSredstvList")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Kurs", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("Kurses")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduKurs", "EduKurs")
                        .WithMany()
                        .HasForeignKey("EduKursId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.RabProgram", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("RabPrograms")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.Semestr", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Kurs", "Kurs")
                        .WithMany("Semestres")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.SemestrName", "SemestrName")
                        .WithMany()
                        .HasForeignKey("SemestrNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.SemestrFormKontrolName", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.FormKontrolName", "FormKontrolName")
                        .WithMany()
                        .HasForeignKey("FormKontrolNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.Semestr", "Semestr")
                        .WithMany("SemestrFormKontrolName")
                        .HasForeignKey("SemestrId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Education.SemestrVidUchebRaboti", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Semestr", "Semestr")
                        .WithMany("SemestrVidUchebRaboti")
                        .HasForeignKey("SemestrId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.VidUchebRabotiName", "VidUchebRabotiName")
                        .WithMany()
                        .HasForeignKey("VidUchebRabotiNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.EduGraduate", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.GraduateYear", "GraduateYear")
                        .WithMany()
                        .HasForeignKey("GraduateYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileDataType", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileDataTypeGroup", "FileDataTypeGroup")
                        .WithMany("FileDataTypes")
                        .HasForeignKey("FileDataTypeGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Files.UserDocument", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("UserDocuments")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileDataType", "FileDataType")
                        .WithMany()
                        .HasForeignKey("FileDataTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.FileToFileType", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileDataType", "FileDataType")
                        .WithMany("FileToFileTypes")
                        .HasForeignKey("FileDataTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany("FileToFileTypes")
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.GraduateTrudoustroustvo", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.GraduateYear", "GraduateYearName")
                        .WithMany()
                        .HasForeignKey("GraduateYearId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.AppUserLmsEvent", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.AppUserLmsEventUserRole", "AppUserLmsEventUserRole")
                        .WithMany()
                        .HasForeignKey("AppUserLmsEventUserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEvent", "LmsEvent")
                        .WithMany("AppUserLmsEvents")
                        .HasForeignKey("LmsEventId1");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEvent", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEventType", "LmsEventType")
                        .WithMany()
                        .HasForeignKey("LmsEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventAdditionalMaterial", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEvent", "LmsEvent")
                        .WithMany("LmsEventAdditionalMaterials")
                        .HasForeignKey("LmsEventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventChatMessage", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEvent")
                        .WithMany("LmsEventChatMessages")
                        .HasForeignKey("LmsEventId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventLmsTaskSet", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEvent", "LmsEvent")
                        .WithMany()
                        .HasForeignKey("LmsEventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsTaskSet", "LmsTaskSet")
                        .WithMany("LmsEventLmsTaskSets")
                        .HasForeignKey("LmsTaskSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsEventType", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsEventTypeGroup", "LmsEventTypeGroup")
                        .WithMany("LmsEventTypes")
                        .HasForeignKey("LmsEventTypeGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTask", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "LmsTaskJpg")
                        .WithMany()
                        .HasForeignKey("LmsTaskJpgId");

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsTaskType", "LmsTaskType")
                        .WithMany("LmsTasks")
                        .HasForeignKey("LmsTaskTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskDisciplineName", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.DisciplineName", "DisciplineName")
                        .WithMany()
                        .HasForeignKey("DisciplineNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsTask", "LmsTask")
                        .WithMany("LmsTaskDisciplineNames")
                        .HasForeignKey("LmsTaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.LMS.LmsTaskSetLmsTask", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsTask", "LmsTask")
                        .WithMany()
                        .HasForeignKey("LmsTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.LMS.LmsTaskSet", "LmsTaskSet")
                        .WithMany("lmsTaskSetLmsTasks")
                        .HasForeignKey("LmsTaskSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Article", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.ScienceJournal", "ScienceJournal")
                        .WithMany()
                        .HasForeignKey("ScienceJournalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleAuthor", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Article", "Article")
                        .WithMany("ArticleAuthors")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.Author", "Author")
                        .WithMany("ArticleAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleNirSpecial", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Article", "Article")
                        .WithMany("ArticleNirSpecials")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.NirSpecial", "NirSpecial")
                        .WithMany("ArticleNirSpecials")
                        .HasForeignKey("NirSpecialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ArticleNirTema", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Article", "Article")
                        .WithMany("ArticleNirTemas")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.NirTema", "NirTema")
                        .WithMany()
                        .HasForeignKey("NirTemaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Monograf", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografAuthor", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.Author", "Author")
                        .WithMany("MonografAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Monograf", "Monograf")
                        .WithMany("MonografAuthors")
                        .HasForeignKey("MonografId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografNirSpecial", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Monograf", "Monograf")
                        .WithMany("MonografNirSpecials")
                        .HasForeignKey("MonografId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.NirSpecial", "NirSpecial")
                        .WithMany()
                        .HasForeignKey("NirSpecialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.MonografNirTema", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Monograf", "Monograf")
                        .WithMany("MonografNirTemas")
                        .HasForeignKey("MonografId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.NirTema", "NirTema")
                        .WithMany()
                        .HasForeignKey("NirTemaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.NirSpecialEduProfile", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("NirSpecialEduProfiles")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.NirSpecial", "NirSpecial")
                        .WithMany("NirSpecialEduProfiles")
                        .HasForeignKey("NirSpecialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.Patent", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.PatentVid", "PatentVid")
                        .WithMany("Patents")
                        .HasForeignKey("PatentVidId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentAuthor", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.Author", "Author")
                        .WithMany("PatentAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Patent", "Patent")
                        .WithMany("PatentAuthors")
                        .HasForeignKey("PatentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentNirSpecial", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.NirSpecial", "NirSpecial")
                        .WithMany()
                        .HasForeignKey("NirSpecialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Patent", "Patent")
                        .WithMany("PatentNirSpecials")
                        .HasForeignKey("PatentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentNirTema", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.NirTema", "NirTema")
                        .WithMany()
                        .HasForeignKey("NirTemaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.Patent", "Patent")
                        .WithMany("PatentNirTemas")
                        .HasForeignKey("PatentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.PatentVid", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.PatentVidGroup", "PatentVidGroup")
                        .WithMany("PatentVids")
                        .HasForeignKey("PatentVidGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ScienceJournalAddingClaim", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("ScienceJournalAddingClaims")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Nir.ScienceJournalCitationBase", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Nir.CitationBase", "CitationBase")
                        .WithMany()
                        .HasForeignKey("CitationBaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Nir.ScienceJournal", "ScienceJournal")
                        .WithMany("ScienceJournalCitationBases")
                        .HasForeignKey("ScienceJournalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.NirTemaEduProfile", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("NirTemaEduProfileList")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.NirTema", "NirTema")
                        .WithMany("NirTemaEduProfileList")
                        .HasForeignKey("NirTemaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.BlankNum", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.EduPerevod", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.PriemExam", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Priem.Vacant", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduKurs", "EduKurs")
                        .WithMany()
                        .HasForeignKey("EduKursId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.priemKolMest", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.priemKolTarget", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Qualification", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("Qualifications")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Address", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.PopulatedLocality", "PopulatedLocality")
                        .WithMany("Addresses")
                        .HasForeignKey("PopulatedLocalityId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Email", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructInstitute")
                        .WithMany("Emailes")
                        .HasForeignKey("StructInstituteId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructUniversity")
                        .WithMany("Emailes")
                        .HasForeignKey("StructUniversityId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Fax", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructInstitute")
                        .WithMany("Faxes")
                        .HasForeignKey("StructInstituteId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructUniversity")
                        .WithMany("Faxes")
                        .HasForeignKey("StructUniversityId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.InstituteLink", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.LinkType", "LinkType")
                        .WithMany()
                        .HasForeignKey("LinkTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructInstitute", "StructInstitute")
                        .WithMany()
                        .HasForeignKey("StructInstituteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.MetodKomissiyaEduProfile", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("MetodKomissiyaEduProfiles")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.MetodKomissiya", "MetodKomissiya")
                        .WithMany("MetodKomissiyaEduProfiles")
                        .HasForeignKey("MetodKomissiyaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructFacultet", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructInstitute", "StructInstitute")
                        .WithMany("StructFacultets")
                        .HasForeignKey("StructInstituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructSubvision", "StructSubvision")
                        .WithMany()
                        .HasForeignKey("StructSubvisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructInstitute", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructUniversity", "University")
                        .WithMany("StructInstitutes")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructKaf", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructFacultet", "StructFacultet")
                        .WithMany("StructKafs")
                        .HasForeignKey("StructFacultetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructSubvision", "StructSubvision")
                        .WithMany()
                        .HasForeignKey("StructSubvisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructSubvision", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "StructStandingOrder")
                        .WithMany()
                        .HasForeignKey("StructStandingOrderId");

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "StructSubvisionAccountChief")
                        .WithMany("StructSubvisions")
                        .HasForeignKey("StructSubvisionAccountChiefId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "StructSubvisionAdress")
                        .WithMany()
                        .HasForeignKey("StructSubvisionAdressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Email", "StructSubvisionEmail")
                        .WithMany()
                        .HasForeignKey("StructSubvisionEmailId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Post", "StructSubvisionPostChief")
                        .WithMany()
                        .HasForeignKey("StructSubvisionPostChiefId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructSubvisionType", "StructSubvisionType")
                        .WithMany("StructSubvisions")
                        .HasForeignKey("StructSubvisionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.StructUniversity", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Struct.Telephone", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructInstitute")
                        .WithMany("Telephones")
                        .HasForeignKey("StructInstituteId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructUniversity")
                        .WithMany("Telephones")
                        .HasForeignKey("StructUniversityId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.MessageFromAppUserToStudentGroup", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser")
                        .WithMany("MessagesFromAppUserToStudentGroups")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Education.DisciplineName", "DisciplineName")
                        .WithMany()
                        .HasForeignKey("DisciplineNameId");

                    b.HasOne("KisVuzDotNetCore2.Models.Students.StudentGroup", "StudentGroup")
                        .WithMany("MessagesFromAppUserToStudentGroup")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Common.UserMessageType", "UserMessageType")
                        .WithMany()
                        .HasForeignKey("UserMessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.Student", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("Students")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "RezultOsvoenObrazovatProgr")
                        .WithMany()
                        .HasForeignKey("RezultOsvoenObrazovatProgrId");

                    b.HasOne("KisVuzDotNetCore2.Models.Students.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.StudentGroup", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduKurs", "EduKurs")
                        .WithMany()
                        .HasForeignKey("EduKursId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany("StudentGroups")
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Teacher", "Kurator")
                        .WithMany("StudentGroupsOfKurator")
                        .HasForeignKey("KuratorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructFacultet", "StructFacultet")
                        .WithMany()
                        .HasForeignKey("StructFacultetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.Vedomost", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYear", "EduYear")
                        .WithMany()
                        .HasForeignKey("EduYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.SemestrName", "SemestrName")
                        .WithMany()
                        .HasForeignKey("SemestrNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Students.StudentGroup", "StudentGroup")
                        .WithMany("Vedomosti")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Students.VedomostStudentMark", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Students.Student", "Student")
                        .WithMany("VedomostStudentMarks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Students.Vedomost", "Vedomost")
                        .WithMany("VedomostStudentMarks")
                        .HasForeignKey("VedomostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Students.VedomostStudentMarkName", "VedomostStudentMarkName")
                        .WithMany()
                        .HasForeignKey("VedomostStudentMarkNameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduNir", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduOPYear", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.EduOPEduYearName", "EduOPEduYearName")
                        .WithMany()
                        .HasForeignKey("EduOPEduYearNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYearBeginningTraining", "EduYearBeginningTraining")
                        .WithMany()
                        .HasForeignKey("EduYearBeginningTrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.EduPr", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduYearBeginningTraining", "EduYearBeginningTraining")
                        .WithMany()
                        .HasForeignKey("EduYearBeginningTrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.ElectronBiblSystem", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "CopyDogovor")
                        .WithMany()
                        .HasForeignKey("CopyDogovorId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.ElectronObrazovatInformRes", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "Res")
                        .WithMany()
                        .HasForeignKey("ResId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Korpus", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "KorpusAddress")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Oborudovanie", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.Pomeshenie", "Pomeshenie")
                        .WithMany("OborudovanieList")
                        .HasForeignKey("PomeshenieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Pomeshenie", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.Korpus", "Korpus")
                        .WithMany("Pomesheniya")
                        .HasForeignKey("KorpusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructSubvision", "StructSubvision")
                        .WithMany("Pomesheniya")
                        .HasForeignKey("StructSubvisionId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.PomeshenieTypepomesheniya", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.Pomeshenie", "Pomeshenie")
                        .WithMany("PomeshenieTypes")
                        .HasForeignKey("PomeshenieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Sveden.PomeshenieType", "PomeshenieType")
                        .WithMany()
                        .HasForeignKey("PomeshenieTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Sveden.Rucovodstvo", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.Author", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("Author")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieFormaIzdaniya", "UchPosobieFormaIzdaniya")
                        .WithMany()
                        .HasForeignKey("UchPosobieFormaIzdaniyaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieVid", "UchPosobieVid")
                        .WithMany()
                        .HasForeignKey("UchPosobieVidId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieAuthor", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.Author", "Author")
                        .WithMany("UchPosobieAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", "UchPosobie")
                        .WithMany("UchPosobieAuthors")
                        .HasForeignKey("UchPosobieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieDisciplineName", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.DisciplineName", "DisciplineName")
                        .WithMany()
                        .HasForeignKey("DisciplineNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", "UchPosobie")
                        .WithMany("UchPosobieDisciplineNames")
                        .HasForeignKey("UchPosobieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieEduForm", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduForm", "EduForm")
                        .WithMany()
                        .HasForeignKey("EduFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", "UchPosobie")
                        .WithMany("EduForms")
                        .HasForeignKey("UchPosobieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobieEduNapravl", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduNapravl", "EduNapravl")
                        .WithMany()
                        .HasForeignKey("EduNapravlId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.UchPosobiya.UchPosobie", "UchPosobie")
                        .WithMany("EduNapravls")
                        .HasForeignKey("UchPosobieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.AppUserForeignLanguage", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("AppUserForeignLanguages")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.ForeignLanguage", "ForeignLanguage")
                        .WithMany()
                        .HasForeignKey("ForeignLanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.AppUserStructSubvision", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("AppUserStructSubvisions")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Common.EmploymentForm", "EmploymentForm")
                        .WithMany()
                        .HasForeignKey("EmploymentFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructSubvision", "StructSubvision")
                        .WithMany()
                        .HasForeignKey("StructSubvisionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.FamilyMemberContact", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("FamilyMemberContacts")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.FamilyMemberType", "FamilyMemberType")
                        .WithMany()
                        .HasForeignKey("FamilyMemberTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.PassportData", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Address", "Address")
                        .WithOne("PassportData")
                        .HasForeignKey("KisVuzDotNetCore2.Models.Users.PassportData", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithOne("PassportData")
                        .HasForeignKey("KisVuzDotNetCore2.Models.Users.PassportData", "AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.Files.UserDocument", "UserDocument")
                        .WithOne("PassportData")
                        .HasForeignKey("KisVuzDotNetCore2.Models.Users.PassportData", "UserDocumentId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.ProfessionalRetraining", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("ProfessionalRetrainings")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "ProfessionalRetrainingFile")
                        .WithMany()
                        .HasForeignKey("ProfessionalRetrainingFileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.RefresherCourse", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("RefresherCourses")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "RefresherCourseFile")
                        .WithMany()
                        .HasForeignKey("RefresherCourseFileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.Teacher", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("Teachers")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherDiscipline", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.Discipline", "Discipline")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduPlanEduYear", "EduPlanEduYear")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("EduPlanEduYearId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Teacher", "Teacher")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherEduProfileDisciplineName", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Education.DisciplineName", "DisciplineName")
                        .WithMany()
                        .HasForeignKey("DisciplineNameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Education.EduProfile", "EduProfile")
                        .WithMany()
                        .HasForeignKey("EduProfileId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Teacher", "Teacher")
                        .WithMany("TeacherEduProfileDisciplineNames")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherMetodKomissiya", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Struct.MetodKomissiya", "MetodKomissiya")
                        .WithMany("TeacherMetodKomissii")
                        .HasForeignKey("MetodKomissiyaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Teacher", "Teacher")
                        .WithMany("TeacherMetodKomissii")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.TeacherStructKafPostStavka", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.Common.EmploymentForm", "EmploymentForm")
                        .WithMany()
                        .HasForeignKey("EmploymentFormId");

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Struct.StructKaf", "StructKaf")
                        .WithMany("TeacherStructKafPostStavka")
                        .HasForeignKey("StructKafId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Users.Teacher", "Teacher")
                        .WithMany("TeacherStructKafPostStavka")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserAchievment", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("UserAchievments")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.UserAchievmentType", "UserAchievmentType")
                        .WithMany("UserAchievments")
                        .HasForeignKey("UserAchievmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserEducation", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("UserEducations")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.Common.EducationalInstitution", "EducationalInstitution")
                        .WithMany()
                        .HasForeignKey("EducationalInstitutionId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileDataType", "FileDataType")
                        .WithMany()
                        .HasForeignKey("FileDataTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Qualification", "Qualification")
                        .WithMany("UserEducations")
                        .HasForeignKey("QualificationId");

                    b.HasOne("KisVuzDotNetCore2.Models.RowStatus", "RowStatus")
                        .WithMany()
                        .HasForeignKey("RowStatusId");

                    b.HasOne("KisVuzDotNetCore2.Models.Files.UserDocument", "UserDocument")
                        .WithMany("UserEducations")
                        .HasForeignKey("UserDocumentId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserMessage", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "UserReceiver")
                        .WithMany()
                        .HasForeignKey("UserReceiverId");

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "UserSender")
                        .WithMany()
                        .HasForeignKey("UserSenderId");
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWork", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "AppUser")
                        .WithMany("UserWorks")
                        .HasForeignKey("AppUserId");

                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.UserWorkType", "UserWorkType")
                        .WithMany("UserWorks")
                        .HasForeignKey("UserWorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KisVuzDotNetCore2.Models.Users.UserWorkReview", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.FileModel", "FileModel")
                        .WithMany()
                        .HasForeignKey("FileModelId");

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId");

                    b.HasOne("KisVuzDotNetCore2.Models.Users.UserWork", "UserWork")
                        .WithMany("UserWorkReviews")
                        .HasForeignKey("UserWorkId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.Users.UserWorkReviewMark", "UserWorkReviewMark")
                        .WithMany()
                        .HasForeignKey("UserWorkReviewMarkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KisVuzDotNetCore2.Models.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KisVuzDotNetCore2.Models.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

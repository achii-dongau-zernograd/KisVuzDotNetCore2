@model IEnumerable<AppUser>

@{ 
    var rolesDictionary = (Dictionary<string, List<string>>)ViewBag.RolesDictionary ?? null;
}

<h1>Поиск аккаунтов пользователей</h1>

<div class="panel panel-default">
    <div class="panel-heading">Фильтр</div>
    <div class="panel-body">
        <form class="form-inline" asp-action="Search">
            <div class="form-group">
                <label for="LastNameSearchFragment">Фамилия (фрагмент)</label>
                <input type="text" name="LastNameSearchFragment" value="@ViewBag.AppUserSearchModel.LastNameSearchFragment" class="form-control" id="LastNameSearchFragment" placeholder="Все пользователи">
            </div>
            <div class="form-group">
                <label for="EmailSearchFragment">Электронная почта (фрагмент)</label>
                <input type="text" name="EmailSearchFragment" value="@ViewBag.AppUserSearchModel.EmailSearchFragment" class="form-control" id="EmailSearchFragment" placeholder="Все email'ы">
            </div>
            <div class="form-group">
                <label for="AppUserStatusId">Статус пользователей</label>
                <select name="AppUserStatusId" class="form-control" asp-items="ViewBag.AppUserStatuses">
                    <option>Все статусы</option>
                </select>
            </div>            

            <input type="hidden" name="isRequestDataImmediately" value="true" />
            <button type="submit" class="btn btn-default">Применить фильтр</button>
        </form>
    </div>
</div>



<div>
    <a class="btn btn-primary" asp-action="Create">Создать аккаунт</a>
    <a class="btn btn-primary" asp-action="SearchBadAccounts">Поиск неиспользуемых аккаунтов</a>
</div>

<table class="table table-condensed table-bordered">
    <tr>        
        <th>ФИО</th>
        <th>Логин</th>
        <th>Email</th>
        <th>Пароль</th>
        <th>Абитуриент</th>
        <th>Студент</th>
        <th>Преподаватель</th>
        <th>Роли</th>
        <th>Действия</th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="9" class="text-center">Аккаунты пользователей, удовлетворяющие запросу, не найдены.</td>
        </tr>
    }
    else
    {
        foreach (AppUser user in Model.OrderBy(u => u.GetFullName))
        {
            <tr>                
                <td>
                    <a asp-controller="UserProfile" asp-action="Index" asp-route-id="@user.Id">@user.GetFullName</a>
                    <br />
                    @if (user.AppUserStatus != null)
                    {
                        switch (user.AppUserStatusId)
                        {
                            case (int)AppUserStatusEnum.ToDelete:
                                <p class="bg-danger">@user.AppUserStatus.AppUserStatusName</p>
                                break;
                            case (int)AppUserStatusEnum.NewUser:
                                <p class="bg-info">@user.AppUserStatus.AppUserStatusName</p>
                                break;
                            case (int)AppUserStatusEnum.ConfirmedUser:
                                <p class="bg-success">@user.AppUserStatus.AppUserStatusName</p>
                                break;
                            default:
                                break;
                        }
                    }

                </td>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@(user.Password??"Неизвестно")</td>
                <td>
                    @if (user.Abiturient != null)
                    {
                        <a asp-controller="RegisteredAbiturients"
                           asp-action="Details"
                           asp-route-userName="@user.UserName"
                           target="_blank">
                            Да (@user.Abiturient.AbiturientStatus.AbiturientStatusName)
                        </a>
                    }
                    else
                    {
                        <p>-</p>
                    }
                </td>
                <td>
                    @if (user.Students.Count > 0)
                    {
                        <p>Студент</p>
                    }
                    else
                    {
                        <p>-</p>
                    }
                </td>
                <td>
                    @if (user.Teachers.Count > 0)
                    {
                        <p>Преподаватель</p>
                    }
                    else
                    {
                        <p>-</p>
                    }
                </td>
                <td>
                    @if(rolesDictionary != null)
                    {
                        var roles = new List<string>();
                        rolesDictionary.TryGetValue(user.Id, out roles);

                        if(roles == null || roles.Count == 0)
                        {
                            <p>-</p>
                        }
                        else
                        {
                            <ol>
                                @foreach (var role in roles)
                                {
                                    <li>@role</li>
                                }
                            </ol>                            
                        }

                    }                    
                </td>
                <td>
                    <form asp-action="Delete" asp-route-userName="@user.UserName" method="post">
                        <a class="btn btn-sm btn-primary btn-block" asp-action="EditUserRoles" asp-route-id="@user.Id">Роли</a>
                        <a class="btn btn-sm btn-primary btn-block" asp-action="Edit" asp-route-id="@user.Id">Редактировать учетные данные</a>
                        <button type="submit" class="btn btn-sm btn-danger btn-block">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    }
</table>